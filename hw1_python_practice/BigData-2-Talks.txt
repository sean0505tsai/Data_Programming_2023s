函式的定義與module的建置

1 為函式加上參數，參數給予初值。
2 透過參數名稱，來引用有初值設定的變數。

3 附上函式註解，讓help來引用:

4 註解在函式的上列(外部)或下列(內部) <-- 由內而外！

5 將函式集中起來形成 module。
  組合成 module 後，如何讓測試內容與函式並存: __name__ == "__main__"。

BigData_Functions.py
1) 直接執行此程式時，其角色為 "__main__"。
2) 使用 import BigData_Functions 引入時，其角色為 module: "BigData_Functions", 即主檔案名稱。


http://140.129.118.16/~richwang/exercise/CoursesExerciseList-111-2.html

class <-> object
產品型錄  真實商品

class: 對將要生成物件(object)的內含與功能的具體描述。
object: 具有描述容的真實的物件(實例或個體)。
類別成員: 屬於所有的物件。
物件成員: 只屬於該物件。

駕駛與公車: 一輛公車可以有很多駕駛，好比分成早班與晚班的駕駛。

遞迴程式設計的解題規則:
1) 假設可以解決問題的遞迴函式。
2) 找出過程中問題重複的規則。
3) 確定問題可以結束的條件。
最後好像就莫名其妙地解決了問題。